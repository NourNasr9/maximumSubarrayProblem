#include <iostream>
#include <bits/stdc++.h>

using namespace std;

void maxSub(int arr[], int n, int &maxSubarrSum, int &maxSubseqSum) {
    int currSum = arr[0], maxElem = arr[0];
    bool pos = false;
    maxSubarrSum = arr[0];
    maxSubseqSum = arr[0];

    for (int i=1; i<n ; i++) {
        currSum = max(arr[i], currSum + arr[i]);
        maxSubarrSum = max(maxSubarrSum, currSum);
        if(arr[i]>0){
            maxSubseqSum +=arr[i];
            pos = true;
        }
        maxElem = max(maxElem, arr[i]);
    }
    if (!pos) {
        maxSubseqSum = maxElem;
    }
}

int main()
{
    int t;
    cin >> t;
    while(t<1 || t>10){
        cout << "t must be greater than or equal to 1 or smaller than or equal to 10" << endl;
        cout << "Please enter t again: ";
        cin >> t;
    }
    pair<int, int> res[t];
    for(int tst=0; tst<t ; tst++) {
        int n;
        cin >> n;
        while(n<1 || n>100000){
        cout << "n must be greater than or equal to 1 or smaller than or equal to 10^5" << endl;
        cout << "Please enter n again: ";
        cin >> n;
        }

        int arr[n];
        for(int i=0; i<n; i++){
            cin >> arr[i];
        while(arr[i]<-10000 || arr[i]>10000){
        cout << "arr["<< i <<"] must be greater than or equal to 1 or smaller than or equal to 10" << endl;
        cout << "Please enter arr["<<i<< "] again: ";
        cin >> arr[i];
        }
        }
        int maxSubarrSum, maxSubseqSum;
        maxSub(arr, n, maxSubarrSum, maxSubseqSum);
        res[tst] = make_pair(maxSubarrSum,maxSubseqSum);
    }

    for(int i=0; i<t; i++){
        cout << res[i].first << " " << res[i].second << endl;
    }
    return 0;
}
